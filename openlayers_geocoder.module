<?php
// $Id$

/**
 * @file
 * Add geocoding capabilities to OpenLayer CCK widget.
 *
 * @ingroup openlayers
 */


/**
 * Implementation of hook_init()
 */
function openlayers_geocoder_init() {
  drupal_add_css(drupal_get_path('module', 'openlayers_geocoder') .'/openlayers_geocoder.css', 'module');
}

/**
 * Implementation of hook_menu().
 */
function openlayers_geocoder_menu() {
  $items = array();
  $items['openlayers/geocoder'] = array(
    'page callback' => 'openlayers_geocoder_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['openlayers/geocoder/coordinates'] = array(
    'page callback' => 'openlayers_geocoder_coordinates',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}


/**
 * Implementaion of hook_elements()
 */
function openlayers_geocoder_elements() {
  return array(
    'openlayers_wkt_widget' => array(
      '#process' => array('openlayers_geocoder_element_process'),
    ),
  );
}

/**
 * Process an individual element.
 */
function openlayers_geocoder_element_process($element, $edit, &$form_state, &$form) {

  drupal_add_js(drupal_get_path('module', 'openlayers_geocoder') .'/js/openlayers_geocoder.js');

  $element['openlayers_geocoder_query'] = array(
    '#title' => t('Search address'),
    '#type' => 'textfield',
    '#maxlength' => 60,
    '#autocomplete_path' => 'openlayers/geocoder',
    '#weight' => 1,
    '#attributes' => array(
      'geoautocomplete' => TRUE,
      'fieldname' => $element['#field_name'],
      'dashed' => str_replace('_', '-', $element['#field_name']),
    ),
  );

  return $element;
}

/**
 * Implementation of hook_theme().
 */
function openlayers_geocoder_theme($existing, $type, $theme, $path) {
  return array(
    'openlayers_geocode_result' => array(
      'arguments' => array('result' => array()),
      'file' => 'includes/openlayers_geocoder.theme.inc',
    ),
  );
}


/**
 * Location list from Google geocoding web service
 *
 * @param $query
 *    Address or location name
 * @return
 *    List of locations
 */
function openlayers_geocoder_autocomplete($query = '') {

  $locations = array();
  if ($result = openlayers_layers_query($query)) {
    if ($result->Status->code == 200) {
      foreach ($result->Placemark as $placemark) {
        $locations[$placemark->address] = $placemark->address;
      }
    }
  }
  drupal_json($locations);
}


/**
 * Return coordinates of a location.
 *
 * @return
 *    Lat/Lan coordinates
 */
function openlayers_geocoder_coordinates() {

  if ($result = openlayers_layers_query($_POST['query'])) {
    $location['latitude'] = 0;
    $location['longitude'] = 0;
    if ($result->Status->code == 200) {
      if ($result->Placemark) {
        $placemark = array_shift($result->Placemark);
        $location['latitude'] = $placemark->Point->coordinates[1];
        $location['longitude'] = $placemark->Point->coordinates[0];
        $location['box'] = $placemark->ExtendedData->LatLonBox;
      }
    }
  }
  drupal_json($location);
}



/**
 * Query Google geocoding web service
 * @param $query
 *    Address or location name
 * @return
 *    Array of placemarks
 */
function openlayers_layers_query($query) {
  if($key = variable_get('openlayers_layers_google_api', variable_get('googlemap_api_key', ''))) {
    $path = check_url('http://maps.google.com/maps/geo?q=' . str_replace(' ', '+', $query) . '&output=json&key=' . $key);
    $response = file_get_contents($path);
    module_load_include('php', 'openlayers_geocoder', 'includes/json/JSON');
    $json = new Services_JSON();
    return $json->decode($response);
  }
  else {
    return NULL;
  }
}